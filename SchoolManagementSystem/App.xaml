<Application x:Class="SchoolManagementSystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SchoolManagementSystem">
    <Application.Resources>
        <Style TargetType="Button" x:Key="baseBtn">
            <Setter Property="Background" Value="#95a5a6"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height"  Value="auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#34495e"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="FontWeight" Value="ExtraBold"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#7f8c8d"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListViewItem}"  x:Key="listViewItemCustom">
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" >
                            <GridViewRowPresenter Content="{TemplateBinding Content}" Margin="0" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#5DADE2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type ListView}" x:Key="listViewCustom">
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource listViewItemCustom}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="4">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource baseBtn}" x:Key="btnAdd">
            <Setter Property="Content" Value="Add"/>
            <Setter Property="Command" Value="{Binding Add}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="0">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource baseBtn}" x:Key="btnSave">
            <Setter Property="Content" Value="Save"/>
            <Setter Property="Command" Value="{Binding Save}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="0">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource baseBtn}" x:Key="btnEdit">
            <Setter Property="Content" Value="Edit"/>
            <Setter Property="Command" Value="{Binding Edit}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource baseBtn}" x:Key="btnCancel">
            <Setter Property="Content" Value="Cancel"/>
            <Setter Property="Command" Value="{Binding Cancel}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource baseBtn}" x:Key="btnDelete">
            <Setter Property="Content" Value="Delete"/>
            <Setter Property="Command" Value="{Binding Delete}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="3">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="TextBlock" x:Key="gridViewTextColumn">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,0"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="baseTxtBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox" x:Key="baseTxtBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>

        <Style TargetType="{x:Type ListView}" x:Key="myListView">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentSituation}" Value="2">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
